name: Deploy React App

on:
  pull_request:   # run on every PR
    branches: ["*"]
  push:           # still run on main push
    branches:
      - main


permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 24

      
      - name: Setup Go
        uses: actions/setup-go@v4

      - name: Install deps
        run: cd playground && npm ci

      - name: Make wasm
        run: make wasm
        
      - name: Build Playground
        run: cd playground && npm run build
        
      - name: install emi-npm deps
        run: cd emi-npm && npm i
      - name: Javascript tests
        run: cd tests/js && npm i -f && npx vitest run
      
      - name: Make all release
        run: cd cmd/emi && make release
        
      - name: Compile the web veresion (docs, and only after running tests because they create document)
        run: cd emi-web && npm i -f && npm run build


      - name: Add web version and playground into same
        run: make compile-github


      - name: Deploy pages ðŸš€
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: ./__webdir

      - name: Get the version tag
        id: get_version_tag
        run: echo "tag_name=$(basename ${GITHUB_REF})" >> $GITHUB_ENV
      

      - name: release
        uses: actions/create-release@v1
        id: create_release
        with:
          draft: true
          prerelease: true
          release_name: ${{ steps.version.outputs.version }}
          tag_name: ${{ env.tag_name }}
          body_path: README.md
        env:
          GITHUB_TOKEN: ${{ github.token }}
      
      - name: Upload amd64-darwin
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/emi_amd64_darwin.zip
          asset_name: emi_amd64_darwin.zip
          asset_content_type: application/zip
        
      - name: Upload arm64-darwin
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/emi_arm64_darwin.zip
          asset_name: emi_arm64_darwin.zip
          asset_content_type: application/zip
      
      - name: Upload amd64-linux
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/emi_amd64_linux.zip
          asset_name: emi_amd64_linux.zip
          asset_content_type: application/zip
        
      - name: Upload arm64-linux
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/emi_arm64_linux.zip
          asset_name: emi_arm64_linux.zip
          asset_content_type: application/zip
   
      - name: Upload amd64-windows
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/emi_amd64_windows.zip
          asset_name: emi_amd64_windows.zip
          asset_content_type: application/zip
        
      - name: Upload arm64-windows
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/emi_arm64_windows.zip
          asset_name: emi_arm64_windows.zip
          asset_content_type: application/zip
      - name: Upload node.js wasm
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/emi-node-wasm-package.zip
          asset_name: emi-node-wasm-package.zip
          asset_content_type: application/zip