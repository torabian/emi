"use strict";(self.webpackChunkemi_web=self.webpackChunkemi_web||[]).push([[347],{4839:(e,n,l)=>{l.r(n),l.d(n,{assets:()=>r,contentTitle:()=>s,default:()=>c,frontMatter:()=>i,metadata:()=>t,toc:()=>u});const t=JSON.parse('{"id":"js/emi-boolean-data-type","title":"Emi boolean data type","description":"Given the following example:","source":"@site/docs/js/emi-boolean-data-type.mdx","sourceDirName":"js","slug":"/js/emi-boolean-data-type","permalink":"/emi/docs/js/emi-boolean-data-type","draft":false,"unlisted":false,"editUrl":"https://github.com/torabian/emi/tree/main/emi-web/docs/js/emi-boolean-data-type.mdx","tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"sidebar_position":5},"sidebar":"tutorialSidebar","previous":{"title":"Emi string data type","permalink":"/emi/docs/js/emi-string-data-type"},"next":{"title":"Emi integer data type","permalink":"/emi/docs/js/emi-int-data-type"}}');var o=l(4848),a=l(8453);const i={sidebar_position:5},s="Emi boolean data type",r={},u=[];function d(e){const n={code:"code",h1:"h1",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"emi-boolean-data-type",children:"Emi boolean data type"})}),"\n",(0,o.jsx)(n.p,{children:"Given the following example:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"name: MyBoolClass\nfields:\n  - name: boolWithDefault\n    default: true\n    type: bool\n  - name: plainBool\n    type: bool\n\n"})}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"bool"})," and ",(0,o.jsx)(n.code,{children:"bool?"})," map directly to JavaScript's ",(0,o.jsx)(n.code,{children:"boolean"})," type."]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"bool"})," fields are always required and default to ",(0,o.jsx)(n.code,{children:"false"})," unless another default is provided."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"bool?"})," fields allow both ",(0,o.jsx)(n.code,{children:"null"})," and ",(0,o.jsx)(n.code,{children:"undefined"}),", with ",(0,o.jsx)(n.code,{children:"undefined"})," being the default if not specified."]}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:["Just like with strings, Emi generates a private backing field (",(0,o.jsx)(n.code,{children:"#field"}),") and a pair of getters and setters.\nThis ensures type safety and avoids accidental runtime errors."]}),"\n",(0,o.jsxs)(n.p,{children:["Example with a non-nullable ",(0,o.jsx)(n.code,{children:"bool"}),":"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ts",children:'import { isPlausibleObject } from "./sdk/common/isPlausibleObject";\nimport { withPrefix } from "./sdk/common/withPrefix";\n/**\n * The base class definition for myBoolClassDto\n **/\nexport class MyBoolClassDto {\n  /**\n   *\n   * @type {boolean}\n   **/\n  #boolWithDefault: boolean = true;\n  /**\n   *\n   * @returns {boolean}\n   **/\n  get boolWithDefault() {\n    return this.#boolWithDefault;\n  }\n  /**\n   *\n   * @type {boolean}\n   **/\n  set boolWithDefault(value: boolean) {\n    const correctType = value === true || value === false;\n    this.#boolWithDefault = correctType ? value : Boolean(value);\n  }\n  setBoolWithDefault(value: boolean) {\n    this.boolWithDefault = value;\n    return this;\n  }\n  /**\n   *\n   * @type {boolean}\n   **/\n  #plainBool: boolean = null;\n  /**\n   *\n   * @returns {boolean}\n   **/\n  get plainBool() {\n    return this.#plainBool;\n  }\n  /**\n   *\n   * @type {boolean}\n   **/\n  set plainBool(value: boolean) {\n    const correctType = value === true || value === false;\n    this.#plainBool = correctType ? value : Boolean(value);\n  }\n  setPlainBool(value: boolean) {\n    this.plainBool = value;\n    return this;\n  }\n  constructor(data) {\n    if (data === null || data === undefined) {\n      return;\n    }\n    if (typeof data === "string") {\n      this.applyFromObject(JSON.parse(data));\n    } else if (isPlausibleObject(data)) {\n      this.applyFromObject(data);\n    } else {\n      throw new Error("Instance is not implemented.");\n    }\n  }\n  /**\n   * casts the fields of a javascript object into the class properties one by one\n   **/\n  applyFromObject(data = {}) {\n    const d = data as Partial<MyBoolClassDto>;\n    if (d.boolWithDefault !== undefined) {\n      this.boolWithDefault = d.boolWithDefault;\n    }\n    if (d.plainBool !== undefined) {\n      this.plainBool = d.plainBool;\n    }\n  }\n  /**\n   *\tSpecial toJSON override, since the field are private,\n   *\tJson stringify won\'t see them unless we mention it explicitly.\n   **/\n  toJSON() {\n    return {\n      boolWithDefault: this.#boolWithDefault,\n      plainBool: this.#plainBool,\n    };\n  }\n  toString() {\n    return JSON.stringify(this);\n  }\n  static get Fields() {\n    return {\n      boolWithDefault: "boolWithDefault",\n      plainBool: "plainBool",\n    };\n  }\n}\nexport abstract class MyBoolClassDtoFactory {\n  abstract create(data: unknown): MyBoolClassDto;\n}\n/**\n * The base type definition for myBoolClassDto\n **/\nexport type MyBoolClassDtoType = {\n  /**\n   *\n   * @type {boolean}\n   **/\n  boolWithDefault?: boolean;\n  /**\n   *\n   * @type {boolean}\n   **/\n  plainBool?: boolean;\n};\n// eslint-disable-next-line @typescript-eslint/no-namespace\nexport namespace MyBoolClassDtoType {}\n\n'})}),"\n",(0,o.jsx)(n.p,{children:"Given the following example:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"name: MyBoolClass\nfields:\n  - name: nullableBoolWithDefault\n    default: true\n    type: bool?\n  - name: nullableBoolWithoutDefault\n    type: bool?\n\n"})}),"\n",(0,o.jsxs)(n.p,{children:["With ",(0,o.jsx)(n.code,{children:"bool?"}),", the backing field is initialised with ",(0,o.jsx)(n.code,{children:"undefined"}),".\nYou can explicitly set it to ",(0,o.jsx)(n.code,{children:"true"}),", ",(0,o.jsx)(n.code,{children:"false"}),", or ",(0,o.jsx)(n.code,{children:"null"}),".\nIf a default is provided, it will be respected."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ts",children:'import { isPlausibleObject } from "./sdk/common/isPlausibleObject";\nimport { withPrefix } from "./sdk/common/withPrefix";\n/**\n * The base class definition for myBoolClassDto\n **/\nexport class MyBoolClassDto {\n  /**\n   *\n   * @type {boolean}\n   **/\n  #nullableBoolWithDefault?: boolean | null = true;\n  /**\n   *\n   * @returns {boolean}\n   **/\n  get nullableBoolWithDefault() {\n    return this.#nullableBoolWithDefault;\n  }\n  /**\n   *\n   * @type {boolean}\n   **/\n  set nullableBoolWithDefault(value: boolean) {\n    const correctType =\n      value === true ||\n      value === false ||\n      value === undefined ||\n      value === null;\n    this.#nullableBoolWithDefault = correctType ? value : Boolean(value);\n  }\n  setNullableBoolWithDefault(value: boolean) {\n    this.nullableBoolWithDefault = value;\n    return this;\n  }\n  /**\n   *\n   * @type {boolean}\n   **/\n  #nullableBoolWithoutDefault?: boolean | null = undefined;\n  /**\n   *\n   * @returns {boolean}\n   **/\n  get nullableBoolWithoutDefault() {\n    return this.#nullableBoolWithoutDefault;\n  }\n  /**\n   *\n   * @type {boolean}\n   **/\n  set nullableBoolWithoutDefault(value: boolean) {\n    const correctType =\n      value === true ||\n      value === false ||\n      value === undefined ||\n      value === null;\n    this.#nullableBoolWithoutDefault = correctType ? value : Boolean(value);\n  }\n  setNullableBoolWithoutDefault(value: boolean) {\n    this.nullableBoolWithoutDefault = value;\n    return this;\n  }\n  constructor(data) {\n    if (data === null || data === undefined) {\n      return;\n    }\n    if (typeof data === "string") {\n      this.applyFromObject(JSON.parse(data));\n    } else if (isPlausibleObject(data)) {\n      this.applyFromObject(data);\n    } else {\n      throw new Error("Instance is not implemented.");\n    }\n  }\n  /**\n   * casts the fields of a javascript object into the class properties one by one\n   **/\n  applyFromObject(data = {}) {\n    const d = data as Partial<MyBoolClassDto>;\n    if (d.nullableBoolWithDefault !== undefined) {\n      this.nullableBoolWithDefault = d.nullableBoolWithDefault;\n    }\n    if (d.nullableBoolWithoutDefault !== undefined) {\n      this.nullableBoolWithoutDefault = d.nullableBoolWithoutDefault;\n    }\n  }\n  /**\n   *\tSpecial toJSON override, since the field are private,\n   *\tJson stringify won\'t see them unless we mention it explicitly.\n   **/\n  toJSON() {\n    return {\n      nullableBoolWithDefault: this.#nullableBoolWithDefault,\n      nullableBoolWithoutDefault: this.#nullableBoolWithoutDefault,\n    };\n  }\n  toString() {\n    return JSON.stringify(this);\n  }\n  static get Fields() {\n    return {\n      nullableBoolWithDefault: "nullableBoolWithDefault",\n      nullableBoolWithoutDefault: "nullableBoolWithoutDefault",\n    };\n  }\n}\nexport abstract class MyBoolClassDtoFactory {\n  abstract create(data: unknown): MyBoolClassDto;\n}\n/**\n * The base type definition for myBoolClassDto\n **/\nexport type MyBoolClassDtoType = {\n  /**\n   *\n   * @type {boolean}\n   **/\n  nullableBoolWithDefault?: boolean;\n  /**\n   *\n   * @type {boolean}\n   **/\n  nullableBoolWithoutDefault?: boolean;\n};\n// eslint-disable-next-line @typescript-eslint/no-namespace\nexport namespace MyBoolClassDtoType {}\n\n'})})]})}function c(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},8453:(e,n,l)=>{l.d(n,{R:()=>i,x:()=>s});var t=l(6540);const o={},a=t.createContext(o);function i(e){const n=t.useContext(a);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);