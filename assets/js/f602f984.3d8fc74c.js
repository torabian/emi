"use strict";(self.webpackChunkemi_web=self.webpackChunkemi_web||[]).push([[582],{1607:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>d,contentTitle:()=>r,default:()=>l,frontMatter:()=>a,metadata:()=>t,toc:()=>m});const t=JSON.parse('{"id":"emi-definitions","title":"Emi definitions","description":"In this document, we discuss the emi definition, and features it has. Emi definition can be defiend via yaml, or json,","source":"@site/docs/emi-definitions.mdx","sourceDirName":".","slug":"/emi-definitions","permalink":"/emi/docs/emi-definitions","draft":false,"unlisted":false,"editUrl":"https://github.com/torabian/emi/tree/main/emi-web/docs/emi-definitions.mdx","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"Getting started","permalink":"/emi/docs/installation"},"next":{"title":"Emi definitions","permalink":"/emi/docs/emi-module-spec"}}');var s=n(4848),o=n(8453);const a={sidebar_position:3},r="Emi definitions",d={},m=[{value:"Simple emi module",id:"simple-emi-module",level:2},{value:"Emi main features.",id:"emi-main-features",level:2}];function c(e){const i={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(i.header,{children:(0,s.jsx)(i.h1,{id:"emi-definitions",children:"Emi definitions"})}),"\n",(0,s.jsx)(i.p,{children:"In this document, we discuss the emi definition, and features it has. Emi definition can be defiend via yaml, or json,\nand doesn't have a special language. It can have a different series of features in it, from actions, dtos, entities.\nIn an absract level, these are just definitions, which different sub compilers, for example js, would create\ndifferent target codes (React, Vanilajs, Nest.js) based on the tags provided."}),"\n",(0,s.jsxs)(i.p,{children:["Emi definitions aim to prevent having specific target language code, so it could be compiled into as many as languages over time.\nYou will find all structs in ",(0,s.jsx)(i.a,{href:"https://github.com/torabian/emi/tree/main/lib/core/Emi.go",children:"https://github.com/torabian/emi/tree/main/lib/core/Emi.go"})]}),"\n",(0,s.jsx)(i.h2,{id:"simple-emi-module",children:"Simple emi module"}),"\n",(0,s.jsx)(i.p,{children:"Here, you can see a minimal module written in Emi, which defines get method to fetch a json placeholder."}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-yaml",children:"name: sampleModule\nactions:\n  - name: getSinglePost\n    url: https://jsonplaceholder.typicode.com/posts/:id\n    cliName: get-single-post\n    method: get\n    description: Get's an specific post from the endpoint\n    out:\n      fields:\n        - name: userId\n          type: int64\n        - name: id\n          type: int64\n        - name: title\n          type: string\n        - name: body\n          type: string\n"})}),"\n",(0,s.jsx)(i.h2,{id:"emi-main-features",children:"Emi main features."}),"\n",(0,s.jsx)(i.p,{children:"On the yaml root, you can set different features of a the module, such as entities, dtos, actions, and many more."})]})}function l(e={}){const{wrapper:i}={...(0,o.R)(),...e.components};return i?(0,s.jsx)(i,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},8453:(e,i,n)=>{n.d(i,{R:()=>a,x:()=>r});var t=n(6540);const s={},o=t.createContext(s);function a(e){const i=t.useContext(o);return t.useMemo(function(){return"function"==typeof e?e(i):{...i,...e}},[i,e])}function r(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),t.createElement(o.Provider,{value:i},e.children)}}}]);