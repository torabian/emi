"use strict";(self.webpackChunkemi_web=self.webpackChunkemi_web||[]).push([[903],{7455:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>u,frontMatter:()=>o,metadata:()=>a,toc:()=>c});const a=JSON.parse('{"id":"intro","title":"Motivation","description":"Syncing backend and front-end projects is often a difficult and error-prone task. Developers spend a lot of time writing API calls manually for each client platform\u2014JavaScript, C++, Swift, and virtually any other language\u2014just to keep the interfaces consistent.","source":"@site/docs/intro.mdx","sourceDirName":".","slug":"/intro","permalink":"/emi/docs/intro","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/intro.mdx","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","next":{"title":"Getting started","permalink":"/emi/docs/installation"}}');var i=n(4848),r=n(8453);const o={sidebar_position:1},s="Motivation",l={},c=[];function d(e){const t={h1:"h1",header:"header",p:"p",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"motivation",children:"Motivation"})}),"\n",(0,i.jsx)(t.p,{children:"Syncing backend and front-end projects is often a difficult and error-prone task. Developers spend a lot of time writing API calls manually for each client platform\u2014JavaScript, C++, Swift, and virtually any other language\u2014just to keep the interfaces consistent."}),"\n",(0,i.jsx)(t.p,{children:"Over the years, I\u2019ve explored many tools\u2014from OpenAPI generators to gRPC\u2014but none truly solve the problem. They either require extensive boilerplate, lack flexibility, or fail to integrate seamlessly with the way developers actually write and maintain code."}),"\n",(0,i.jsx)(t.p,{children:"That\u2019s why we created the Emi compiler. Emi doesn\u2019t just generate API clients; it generates the backend itself, while leveraging standard, idiomatic constructs in each target language. It allows developers to define their application logic once, and automatically produce synchronized backend and frontend layers, reducing errors and saving countless hours. With Emi, the focus shifts from repetitive manual work to building features, while documentation and type safety come naturally, embedded in the code rather than maintained separately."}),"\n",(0,i.jsx)(t.p,{children:"Emi is more than a code generator\u2014it\u2019s a bridge that unifies the backend and all client platforms, making development faster, safer, and more maintainable."})]})}function u(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>s});var a=n(6540);const i={},r=a.createContext(i);function o(e){const t=a.useContext(r);return a.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),a.createElement(r.Provider,{value:t},e.children)}}}]);