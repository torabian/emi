"use strict";(self.webpackChunkemi_web=self.webpackChunkemi_web||[]).push([[548],{1947:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>o,contentTitle:()=>c,default:()=>h,frontMatter:()=>r,metadata:()=>t,toc:()=>a});const t=JSON.parse('{"id":"emi-module-spec","title":"Emi definitions","description":"In this document, we discuss the emi definition, and features it has. Emi definition can be defiend via yaml, or json,","source":"@site/docs/emi-module-spec.mdx","sourceDirName":".","slug":"/emi-module-spec","permalink":"/emi/docs/emi-module-spec","draft":false,"unlisted":false,"editUrl":"https://github.com/torabian/emi/tree/main/emi-web/docs/emi-module-spec.mdx","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"Emi definitions","permalink":"/emi/docs/emi-definitions"},"next":{"title":"Emi Actions","permalink":"/emi/docs/emi-actions"}}');var s=n(4848),d=n(8453);const r={sidebar_position:3},c="Emi definitions",o={},a=[{value:"Simple emi module",id:"simple-emi-module",level:2},{value:"Emi main features.",id:"emi-main-features",level:2}];function l(e){const i={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,d.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(i.header,{children:(0,s.jsx)(i.h1,{id:"emi-definitions",children:"Emi definitions"})}),"\n",(0,s.jsx)(i.p,{children:"In this document, we discuss the emi definition, and features it has. Emi definition can be defiend via yaml, or json,\nand doesn't have a special language. It can have a different series of features in it, from actions, dtos, entities.\nIn an absract level, these are just definitions, which different sub compilers, for example js, would create\ndifferent target codes (React, Vanilajs, Nest.js) based on the tags provided."}),"\n",(0,s.jsxs)(i.p,{children:["Emi definitions aim to prevent having specific target language code, so it could be compiled into as many as languages over time.\nYou will find all structs in ",(0,s.jsx)(i.a,{href:"https://github.com/torabian/emi/tree/main/lib/core/Emi.go",children:"https://github.com/torabian/emi/tree/main/lib/core/Emi.go"})]}),"\n",(0,s.jsx)(i.h2,{id:"simple-emi-module",children:"Simple emi module"}),"\n",(0,s.jsx)(i.p,{children:"Here, you can see a minimal module written in Emi, which defines get method to fetch a json placeholder."}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-yaml",children:"name: sampleModule\nactions:\n  - name: getSinglePost\n    url: https://jsonplaceholder.typicode.com/posts/:id\n    cliName: get-single-post\n    method: get\n    description: Get's an specific post from the endpoint\n    out:\n      fields:\n        - name: userId\n          type: int64\n        - name: id\n          type: int64\n        - name: title\n          type: string\n        - name: body\n          type: string\n"})}),"\n",(0,s.jsx)(i.h2,{id:"emi-main-features",children:"Emi main features."}),"\n",(0,s.jsx)(i.p,{children:"On the yaml root, you can set different features of a the module, such as entities, dtos, actions, and many more."}),"\n",(0,s.jsxs)(i.table,{children:[(0,s.jsx)(i.thead,{children:(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.th,{children:"Property"}),(0,s.jsx)(i.th,{children:"Type"}),(0,s.jsx)(i.th,{children:"Description"})]})}),(0,s.jsxs)(i.tbody,{children:[(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"namespace"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"string"})}),(0,s.jsx)(i.td,{children:"Represents where is the location of the module in app tree. Similar to PHP namespacing sytem it be used to explicitly as export path of the actions for client frameworks"})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"description"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"string"})}),(0,s.jsx)(i.td,{children:"Description of module and it's purpose. Used in code gen and creating documents."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"version"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"string"})}),(0,s.jsx)(i.td,{children:"Version of the module. Helpful for different code generation phases but it's not necessary."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"meta-workspace"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"boolean"})}),(0,s.jsx)(i.td,{children:"Magic property for Emi EmiEmi.yml file. It's gonna be true only in a single file internally in Emi"})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"name"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"string"})}),(0,s.jsx)(i.td,{children:"Name of the module. Needs to be lower camel case and Module.go and Module.dyno.go will be generated based on this name."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"entities"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"array"})}),(0,s.jsx)(i.td,{children:"List of entities that module contains. Entities are basically tables in database with their mapping on golang and general actions generated for them"})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"enums"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"array"})}),(0,s.jsx)(i.td,{children:"Module level enums which can be used across the other parts of generated code."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"tasks"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"array"})}),(0,s.jsx)(i.td,{children:"Tasks are actions which are triggered by a queue message or a cron job."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"dtos"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"array"})}),(0,s.jsx)(i.td,{children:"Dtos are basically golang structs with some additional functionality which can be used for request/response actions"})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"complexes"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"array"})}),(0,s.jsx)(i.td,{children:"Complex custom data types definitions and location"})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"actions"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"array"})}),(0,s.jsx)(i.td,{children:"Actions are similar to controllers in other frameworks. They are custom functionality available via CLI or Http requests and developer need to implement their logic"})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"macros"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"array"})}),(0,s.jsx)(i.td,{children:"Macros are extra definition or templates which will modify the module and able to add extra fields or tables before the codegen occures."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"remotes"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"array"})}),(0,s.jsx)(i.td,{children:"Remotes are definition of external services which could be contacted via http and Emi developer can make them typesafe by defining them here."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"notifications"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"array"})}),(0,s.jsx)(i.td,{children:"Notifications are end-user messages"})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"events"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"array"})}),(0,s.jsx)(i.td,{children:"Events are internal changes that can be triggered by different sources"})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"queries"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"array"})}),(0,s.jsx)(i.td,{children:"Queries are set of SQL queries that developer writes and Emi generates tools for fetching them from database to golang code."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"config"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"array"})}),(0,s.jsx)(i.td,{children:"An interesting way of defining env variables"})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"messages"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"undefined"})}),(0,s.jsx)(i.td,{children:"Messages are translatable strings which will be used as errors and other types of messages and become automatically picked via user locale."})]})]})]})]})}function h(e={}){const{wrapper:i}={...(0,d.R)(),...e.components};return i?(0,s.jsx)(i,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},8453:(e,i,n)=>{n.d(i,{R:()=>r,x:()=>c});var t=n(6540);const s={},d=t.createContext(s);function r(e){const i=t.useContext(d);return t.useMemo(function(){return"function"==typeof e?e(i):{...i,...e}},[i,e])}function c(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),t.createElement(d.Provider,{value:i},e.children)}}}]);