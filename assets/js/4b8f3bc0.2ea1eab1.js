"use strict";(self.webpackChunkemi_web=self.webpackChunkemi_web||[]).push([[897],{8453:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>a});var i=s(6540);const t={},o=i.createContext(t);function r(e){const n=i.useContext(o);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),i.createElement(o.Provider,{value:n},e.children)}},8992:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>m,contentTitle:()=>a,default:()=>d,frontMatter:()=>r,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"js/emi-enum","title":"Enums in modules","description":"Besides defining inline enums, emi definition allows for standalone enums which is really useful,","source":"@site/docs/js/emi-enum.md","sourceDirName":"js","slug":"/js/emi-enum","permalink":"/emi/docs/js/emi-enum","draft":false,"unlisted":false,"editUrl":"https://github.com/torabian/emi/tree/main/emi-web/docs/js/emi-enum.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4},"sidebar":"tutorialSidebar","previous":{"title":"Javascript object generation","permalink":"/emi/docs/js/emi-object"},"next":{"title":"Class fields in depth","permalink":"/emi/docs/js/emi-fields-in-depth"}}');var t=s(4848),o=s(8453);const r={sidebar_position:4},a="Enums in modules",m={},l=[];function u(e){const n={code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"enums-in-modules",children:"Enums in modules"})}),"\n",(0,t.jsx)(n.p,{children:"Besides defining inline enums, emi definition allows for standalone enums which is really useful,\nfor sharing enums between multiple files."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"name: emiEnums\nenums:\n  - name: enum1\n    fields:\n      - k: Key1\n        value: Value1\n      - k: Key2\n        value: Value2\n\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:'/**\n * Enum Enum1\n */\nexport enum Enum1 {\n  /*\n   *\n   **/\n  Key1 = "Key1",\n  /*\n   *\n   **/\n  Key2 = "Key2",\n}\n\n'})})]})}function d(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(u,{...e})}):u(e)}}}]);