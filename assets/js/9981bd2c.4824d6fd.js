"use strict";(self.webpackChunkemi_web=self.webpackChunkemi_web||[]).push([[347],{4839:(n,e,l)=>{l.r(e),l.d(e,{assets:()=>r,contentTitle:()=>s,default:()=>c,frontMatter:()=>i,metadata:()=>o,toc:()=>u});const o=JSON.parse('{"id":"js/emi-boolean-data-type","title":"Emi boolean data type","description":"Given the following example:","source":"@site/docs/js/emi-boolean-data-type.mdx","sourceDirName":"js","slug":"/js/emi-boolean-data-type","permalink":"/emi/docs/js/emi-boolean-data-type","draft":false,"unlisted":false,"editUrl":"https://github.com/torabian/emi/tree/main/emi-web/docs/js/emi-boolean-data-type.mdx","tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"sidebar_position":5},"sidebar":"tutorialSidebar","previous":{"title":"Emi string data type","permalink":"/emi/docs/js/emi-string-data-type"},"next":{"title":"Emi integer data type","permalink":"/emi/docs/js/emi-int-data-type"}}');var t=l(4848),a=l(8453);const i={sidebar_position:5},s="Emi boolean data type",r={},u=[];function d(n){const e={code:"code",h1:"h1",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.header,{children:(0,t.jsx)(e.h1,{id:"emi-boolean-data-type",children:"Emi boolean data type"})}),"\n",(0,t.jsx)(e.p,{children:"Given the following example:"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-yaml",children:"name: MyBoolClass\nfields:\n  - name: boolWithDefault\n    default: true\n    type: bool\n  - name: plainBool\n    type: bool\n\n"})}),"\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.code,{children:"bool"})," and ",(0,t.jsx)(e.code,{children:"bool?"})," map directly to JavaScript's ",(0,t.jsx)(e.code,{children:"boolean"})," type."]}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:"bool"})," fields are always required and default to ",(0,t.jsx)(e.code,{children:"false"})," unless another default is provided."]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:"bool?"})," fields allow both ",(0,t.jsx)(e.code,{children:"null"})," and ",(0,t.jsx)(e.code,{children:"undefined"}),", with ",(0,t.jsx)(e.code,{children:"undefined"})," being the default if not specified."]}),"\n"]}),"\n",(0,t.jsxs)(e.p,{children:["Just like with strings, Emi generates a private backing field (",(0,t.jsx)(e.code,{children:"#field"}),") and a pair of getters and setters.\nThis ensures type safety and avoids accidental runtime errors."]}),"\n",(0,t.jsxs)(e.p,{children:["Example with a non-nullable ",(0,t.jsx)(e.code,{children:"bool"}),":"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-ts",children:'/**\n * The base class definition for myBoolClassDto\n **/\n\nexport class MyBoolClassDto {\n  /**\n   *\n   * @type {boolean}\n   **/\n  #boolWithDefault: boolean = true;\n  /**\n   *\n   * @returns {boolean}\n   **/\n  get boolWithDefault() {\n    return this[`#boolWithDefault`];\n  }\n\n  /**\n   *\n   * @type {boolean}\n   **/\n\n  set boolWithDefault(value: boolean) {\n    const correctType = value === true || value === false;\n    this["#boolWithDefault"] = correctType ? value : Boolean(value);\n  }\n\n  setBoolWithDefault(value: boolean) {\n    this["boolWithDefault"] = value;\n\n    return this;\n  }\n\n  /**\n   *\n   * @type {boolean}\n   **/\n  #plainBool: boolean = null;\n  /**\n   *\n   * @returns {boolean}\n   **/\n  get plainBool() {\n    return this[`#plainBool`];\n  }\n\n  /**\n   *\n   * @type {boolean}\n   **/\n\n  set plainBool(value: boolean) {\n    const correctType = value === true || value === false;\n    this["#plainBool"] = correctType ? value : Boolean(value);\n  }\n\n  setPlainBool(value: boolean) {\n    this["plainBool"] = value;\n\n    return this;\n  }\n\n  constructor(data: unknown) {\n    const d = data as Partial<MyBoolClassDto>;\n\n    if (d[`boolWithDefault`] !== undefined) {\n      this.boolWithDefault = d[`#boolWithDefault`];\n    }\n\n    if (d[`plainBool`] !== undefined) {\n      this.plainBool = d[`#plainBool`];\n    }\n  }\n}\n\nexport abstract class MyBoolClassDtoFactory {\n  abstract create(data: unknown): MyBoolClassDto;\n}\n\n/**\n * The base type definition for myBoolClassDto\n **/\n\nexport type MyBoolClassDtoType = {\n  /**\n   *\n   * @type {boolean}\n   **/\n  boolWithDefault?: boolean;\n\n  /**\n   *\n   * @type {boolean}\n   **/\n  plainBool?: boolean;\n};\n\n// eslint-disable-next-line @typescript-eslint/no-namespace\nexport namespace MyBoolClassDtoType {}\n\n'})}),"\n",(0,t.jsx)(e.p,{children:"Given the following example:"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-yaml",children:"name: MyBoolClass\nfields:\n  - name: nullableBoolWithDefault\n    default: true\n    type: bool?\n  - name: nullableBoolWithoutDefault\n    type: bool?\n\n"})}),"\n",(0,t.jsxs)(e.p,{children:["With ",(0,t.jsx)(e.code,{children:"bool?"}),", the backing field is initialised with ",(0,t.jsx)(e.code,{children:"undefined"}),".\nYou can explicitly set it to ",(0,t.jsx)(e.code,{children:"true"}),", ",(0,t.jsx)(e.code,{children:"false"}),", or ",(0,t.jsx)(e.code,{children:"null"}),".\nIf a default is provided, it will be respected."]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-ts",children:'/**\n * The base class definition for myBoolClassDto\n **/\n\nexport class MyBoolClassDto {\n  /**\n   *\n   * @type {boolean}\n   **/\n  #nullableBoolWithDefault?: boolean | null = true;\n  /**\n   *\n   * @returns {boolean}\n   **/\n  get nullableBoolWithDefault() {\n    return this[`#nullableBoolWithDefault`];\n  }\n\n  /**\n   *\n   * @type {boolean}\n   **/\n\n  set nullableBoolWithDefault(value: boolean) {\n    const correctType =\n      value === true ||\n      value === false ||\n      value === undefined ||\n      value === null;\n    this["#nullableBoolWithDefault"] = correctType ? value : Boolean(value);\n  }\n\n  setNullableBoolWithDefault(value: boolean) {\n    this["nullableBoolWithDefault"] = value;\n\n    return this;\n  }\n\n  /**\n   *\n   * @type {boolean}\n   **/\n  #nullableBoolWithoutDefault?: boolean | null = undefined;\n  /**\n   *\n   * @returns {boolean}\n   **/\n  get nullableBoolWithoutDefault() {\n    return this[`#nullableBoolWithoutDefault`];\n  }\n\n  /**\n   *\n   * @type {boolean}\n   **/\n\n  set nullableBoolWithoutDefault(value: boolean) {\n    const correctType =\n      value === true ||\n      value === false ||\n      value === undefined ||\n      value === null;\n    this["#nullableBoolWithoutDefault"] = correctType ? value : Boolean(value);\n  }\n\n  setNullableBoolWithoutDefault(value: boolean) {\n    this["nullableBoolWithoutDefault"] = value;\n\n    return this;\n  }\n\n  constructor(data: unknown) {\n    const d = data as Partial<MyBoolClassDto>;\n\n    if (d[`nullableBoolWithDefault`] !== undefined) {\n      this.nullableBoolWithDefault = d[`#nullableBoolWithDefault`];\n    }\n\n    if (d[`nullableBoolWithoutDefault`] !== undefined) {\n      this.nullableBoolWithoutDefault = d[`#nullableBoolWithoutDefault`];\n    }\n  }\n}\n\nexport abstract class MyBoolClassDtoFactory {\n  abstract create(data: unknown): MyBoolClassDto;\n}\n\n/**\n * The base type definition for myBoolClassDto\n **/\n\nexport type MyBoolClassDtoType = {\n  /**\n   *\n   * @type {boolean}\n   **/\n  nullableBoolWithDefault?: boolean;\n\n  /**\n   *\n   * @type {boolean}\n   **/\n  nullableBoolWithoutDefault?: boolean;\n};\n\n// eslint-disable-next-line @typescript-eslint/no-namespace\nexport namespace MyBoolClassDtoType {}\n\n'})})]})}function c(n={}){const{wrapper:e}={...(0,a.R)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(d,{...n})}):d(n)}},8453:(n,e,l)=>{l.d(e,{R:()=>i,x:()=>s});var o=l(6540);const t={},a=o.createContext(t);function i(n){const e=o.useContext(a);return o.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function s(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(t):n.components||t:i(n.components),o.createElement(a.Provider,{value:e},n.children)}}}]);